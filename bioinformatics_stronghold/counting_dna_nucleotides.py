data = "ATATGTTGGGGGACTGACTCCGAGGCGCACCGAGTTGTACCTACCATTGTCTAAAGATCTACTGACCAGTGATTCGCGCGTGCAATTAGCCATTCGCCAGTAGGCCCGACCCCGCGTAATCTGCCCAGGGCACATCTGGCCGAACCGACCCTCCAAATTCACGCTGACTCCGCCGCTCTACATCGAGACATCGGATATACCTAAGGGCCAACGTCGGCCGAATATAGATCTTCTATCTTGACCAGCGCTGACTGTCACTCGCGTGAATCAGCTGCAATAATAACTACGAAATACTCACTTTTGGCTGGTGGTAGGTTAGATTATGGCCTCTCCCTAAAAACTCTTGGGTACGTTAGTTGCCAAACTGGCTGCCCATACCCCGCCACTTAGTGCTGCCTGCCGCCCTTTTACCGATAGAACAGCGGCATGGAGGGTACACTAACGATCACTCGGTGTTGCTCTTAACACTTCCCTGTTGGGTAAGGCTAAGTTATTCTCGTGAATGATTGGGCTGCTTTCTTTGGGCGTTCGGAAATATGTTGATATTATCCCAAGATCTACATGGTAGCGACTTGATGGTGTGTAACGTCAAAGTTACTCCCTTAACCGGTGGGCGACTGTTAAGAGCGACATCGGACACCAACAGATGTTGTCTGGTCCAGATCTGCCGTTAGCACGATCCGATCAGGGGAACAAACGCATGCCGTATACACCACCGTCTTCCAGTGGAGTTTACCACAAAAAGCATGGCCTTAATGGTCAGCCTTGCGTCGCCGCATACTGGCACTATTGAAAAGTTACCTGACAAGAATTCTAATGGTCCGCTAGCCCCCGAGCGTTCAAAGACTGCTGCAAAGAATTTTTCTTTCGTGGCACCTCGACGCAGGCATTATGTCCCCAGCTTTTAAGAAATGGCAGGTACCGTACCCCAACTCGTAATTGGTTCCAGGCATTTATTCAGATACACGCTTGTTTCCCGGCCC"
data2 = "ATATGTTGGGGGACTGACTCCGAGGCGCACCGAGTTGTACCTACCATTGTCTAAAGATCTACTGACCAGTG"

data = "CGAGCGTGCTTGATAGGCTAAAAATTAGGCTTCCAGTCATCCAACCAGGGTAAGGGCGGGTAAACAAGAGCGAGGTTTAAAGGGTGATCCCTCGTCTCAGAAATTGGCTCCCCGATAATCTCAACGATTAGCACGAGAGGAACTCCTATCATCGTCCGTGTTCCTTAGTTCTCGTTCTGGAATTATGACGAGTTATGCCGACGTCTCACCTTTGTGGCTGGTAGGTTCCAGAAAGATACTAGCTAAAGACAAAGCTCAGAGCCAGGCCAACTGACTTGCAGCAGATAGCGATGGTTAGCCTAGGCTCGGGACAACCGTGAGGTCCGCTATTAGAGTCTGCGCGTGCTTTGGGAGTCCCACATGTTATTACCGTGTCCGCATGTAAAGGAAAAACGACCGGAGGTCTGGAGCTGTTCTTAGGACGATAAGGACGGCGTAGGGCTCTCATAAACCAGTAATTAGGGGCAAAACCATTGTGTTCCTATAAAAATGTTGTCATACCTACCGCAGACGGGAAGGACAGACACATTCCCACTCGCTCATCGATGTACGGCGTTGCCTCGGAATAGCTTCGGGTTATTTGGTTCCACAGTCATTGCCCACGCACTGTAGCTGGTACGGCTAACCAATACTCGAGCTCGATCACCCTTCGAAGCGACGGTACAATGTTGCCTATATGTGCTAAATCTTGGTATGCGGTAC"

test = "GTTCTATTGGGTCCTCGGTAAGACGAAGCTTAGGCCCATCCCTAAAAACCTCACTTCTACCATTCTCAGGGTGATTTGCAAAACTCACGCTGGGGCCGCTCCCGGCCTGGCCGTTAAGGCCGATGGCCCAGATATAGTAGGCGAATCCTGGATTTCTCTTGCTTTTGATAATGTTAAGAATGCGGTGCGAGCCTATACTGAGATAAAGGAATATAGACGGCGGGAGACGATGTTTGGTTTCTTGTTGTCTCTAAGCTTACTTGTATCCGTGAGACGTCGCGTGCCTATCTCAGACACAGCTCGCGGACGTATCGATCGCTGAGAGATGAAGTTCGATTATATGGAATTAACTCTCACTTGTTTGTAGTGCACTTATCTTTTATTTGTGTCGGTTACCTACGTCGGCGACCTCCCCCCGAAGCATAACATCTCGGTGGTTTACTGTAGAGCTCCCGTAGCCATCGGAAAGGATGTAGTAACCTTGGTCCGGTTGGAGATAAGGTGCTCATGTCGTTTTTTGCGGAGCATCTACGGCTACGTCTCGGAGCTACTCTAATTTACTACAGAAAGATGTGGTTGACTCGGCCCCTATAGACCAATCCGTCGTTCAGGCAAATGCTGATCCATACTTCTCATTCAGTACTGATGTAAGAGCGTTAGCGGGGTGTCACGTAGTAGTGAACTCCAGTTCGCTGCAATACGCCATTCTGGGGATCTAGCAAAATGAGCTTATTCAATTGTATTAGGCACGCTTACAAAAGACTCTCGCAGTCAACAAAGTTAGGCCACTCCTGGGTCCGAGCGTTAGGAGAGGATGCCCCGCCTGCAGAGCCGGTTCGCAGACGTGGCTCACGCGATGATACTATATCAGGGCTCGGATGATCAATGGGCGCGTGGGTACAGAGAGACCCAGTGCCAGCGCTTACCTCGCCAGCAAGCTTCCTAATGTATCCGTCTCAGGCTCCTTCAC"

def counter(dna):
	count_A = dna.count('A')
	count_T = dna.count('T')
	count_C = dna.count('C')
	count_G = dna.count('G')
	return count_A, count_C, count_G, count_T


print counter(test)

